<template>
  <div class="main-page">
    <div class='header' >
      <text class='span1'>Ask your questions</text>
    </div>
    <div class="chat">
      <list class="msg_list" id="list">
        <list-item type="image" class="userList"><image class="image" src="{{image}}"></image></list-item>
        <list-item for="{{msgs}}" type="text" class="{{$item.source === 'user' ? 'userList' : 'serverList'}}"><text  class="{{$item.source === 'user' ? 'user' : 'server'}}">{{$item.text}}</text></list-item>
      </list>
    </div>
    <div class='below'>
      <input type="text" placeholder='What do you want to know?' value="{{msg}}" onchange="updateValue"></input>
      <div class='clear-btn' onclick='clearMsg'></div>
      <div class='asr-image1' onclick='startAsr'></div>
      <div class="send" onclick="sendMsg" disabled="{{disabled}}"></div>
    </div>
  </div>
</template>

<script>
import prompt from '@system.prompt'
import fetch from '@system.fetch'
import upload from '@system.request'
import asr from '@service.asr'
import storage from '@system.storage'
import vibrator from '@system.vibrator'
import file from '@system.file'
export default {
  private: {
    msg:'',
    msgs:[{"text":"rate this photo","source":"user"}],
    msgBackUp:'', 
    disabled:false,
    cookie:'',
    msgs_init:[],
  },
  protected: {
      image: ''
    },

  onInit() {
    //初始化asr
    this.initAsr()
    // this.msgs.push({"text":"rate this photo","source":"user"});
    //上传服务器
    this.uploadToServer(this.image)
    
  },
  onShow() {
    
    // this.$forceUpdate()//强制刷新
    
  },
  initAsr() {
    let that = this
    asr.oncompleteresult = ({ result }) => {
      this.msg = this.msgBackUp + `${result}`
    }
  },
  startAsr() {
    let that = this
    this.msgBackUp = this.msg
    asr.start({
      success: function () {
        //多调用几遍使震动明显一些
        vibrator.vibrate({ mode: 'short' })
        vibrator.vibrate({ mode: 'short' })
        vibrator.vibrate({ mode: 'short' })
      },
      fail: function (data, code) {
        that.msg = `start fail, code=${code}, data=${data}`
      }
    })
  },

  updateValue(evt) {
    this.msg = evt.value
  },
  clearMsg() {
    this.msg = ''
  },
  sendMsg(){
    if(this.msg===''){
      prompt.showToast({message:'Question must not ne null!!!'})
    }
    else{
      let text=this.msg
      this.msgs.push({"text":text,"source":"user"});
      this.clearMsg();//清除文本框内容
      this.sendToServer(text)//将问题发送到服务器
      this.$element('list').scrollTo({index:this.msgs.length,smooth:true})//滚动到最后一项
    }
    
  },
  sendToServer(message){
    this.disabled=true
    let that=this
      fetch.fetch({
        url:'http://10.112.201.86:5000/predict',
        method:'POST',
        data:message,
        header:{
          'Cookie': that.cookie//通过cookie访问特定的session
        },
        responseType:'json',
      }).then(function(response){
        that.cookie=response.data.headers['Set-Cookie'];//保存cookie
        return response.data.data;
      }).then(function(data){
        that.msgs.push(data)//获取并显示服务器返回的信息
        that.disabled=false
      }).catch(function(err){
        console.error(err);
      });
  },
  //上传图片
  uploadToServer(img){
    this.disabled=true
    let that=this
    //保存图片
    var timestamp = Date.now();
    var fe=that.image.split('.').pop()//后缀名
    file.copy({
        srcUri: that.image,
        dstUri: 'internal://files/image/'+timestamp+'.'+fe,
        success: function(uri) {
          console.log(`copy success: ${uri}`)
          that.image=uri
        },
        fail: function(data, code) {
          console.log(`handling fail, code = ${code}`)
        }
      })
    
    var task=upload.upload({
      url:'http://10.112.201.86:5000/upload',
      files:[{
        uri:img,
        name:'image',
        filename:img.split('/').pop(),
      }],
      responseType:'json',
      success:function(data){
        that.cookie = data.headers['Set-Cookie'];//保存cookie
        that.msgs.push(data.data)//获取并显示服务器返回的信息
        that.disabled=false
        
      },
      fail:function(data,code){
        that.msgs.push({"text":"Failed to connect to the server!","source":"server"})
        console.log(data)
      }
    })
  },
  //返回时保存记录
  onBackPress() {
    let that=this
    storage.get({
      key:'msg',
      success:function(data){
        if(data!=''){
          let list=JSON.parse(data)
          list.images.push({"url":that.image})
          list.msgs.push({"msgs":that.msgs})
          storage.set({
            key:'msg',
            value:list,
            success:function(data){
              console.log(list)
            },
            fail:function(data,code){
              console.log(`handling fail, code = ${code}`)
            }
          })   
        }
        else{
          //第一次保存
          let list={"images":[],"msgs":[]}
          list.images.push({"url":that.image})
          list.msgs.push({"msgs":that.msgs})
          storage.set({
            key:'msg',
            value:list,
            success:function(data){
              console.log(list)
            },
            fail:function(data,code){
              console.log(`handling fail, code = ${code}`)
            }
          })
          
        }
      },
      fail:function(data,code){
        console.error(data)
      }
      
    })
    
    return false;//确保保存完再关闭页面
  },
  onDestroy() {
    
    
  },
  

}
</script>

<style lang="less">
@import '../../assets/styles/font.css';
.main-page {
  background-color: rgb(243, 245, 250);
  flex-direction: column;
  
}
.header {
  display: flex;
  height: 150px;
  width: 750px;
  background-color: #ffffff;
  flex-direction: column;
  align-items: center;
  .span1 {
    font-size: 40px;
    color: #000000;
    font-weight: bold;
    padding-top: 50px;
    
    font-family: myfont, serif;
  }
}
.chat {
  
  flex: 1;
  flex-direction: column;
  height: 90%;
  
  margin-top: 10px;
  margin-bottom: 10px;
}
.userList {
  margin-right: 20px;
  justify-content: flex-end;
  align-items: center;
}
.serverList {
  margin-left: 20px;
  justify-content: flex-start;
  align-items: center;
}
.image{
  height: 500px;
  resize-mode: contain;
  background-image: url("../../assets/images/msgbox_send.9.png");
}
.user {
  margin-bottom: 40px;
  margin-left: 10px;
  font-size: 40px;
  font-family: myfont, serif;
  background-image: url("../../assets/images/msgbox_send.9.png");
}

.server {
  margin-bottom: 40px;
  margin-right: 10px;
  font-size: 40px;
  font-family: myfont, serif;
  background-image: url("../../assets/images/msgbox_receive.9.png");
}  
.below {
  display: flex;
  height: 100px;
  border-radius: 20px;
  margin-bottom: 20px;
  background-color: #ffffff;
  border: 5px solid rgb(238, 240, 245);
  flex-direction: row;
  align-items: center;
  > input {
    flex-grow: 1;
    padding: 10px 30px;
  }
}
.asr-image1 {
  width: 40px;
  height: 40px;
  margin: 30px;
  border-width: 0px;
  flex-shrink: 0;
  background-image: url("../../assets/images/asr.png");
  background-position: center;
}
.clear-btn {
  width: 40px;
  height: 40px;
  margin: 30px 0px 30px 0px;
  border-width: 0px;
  flex-shrink: 0;
  background-image: url("../../assets/images/cancle.png");
  background-position: center;
}
.send {
  width: 40px;
  height: 40px;
  margin: 30px 0px 30px 0px;
  border-width: 0px;
  flex-shrink: 0;
  background-image: url("../../assets/images/send.png");
  background-position: center;
}
</style>